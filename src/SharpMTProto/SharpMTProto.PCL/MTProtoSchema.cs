// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the SharpTL compiler (https://github.com/inTagger/SharpTL).
//     Generated at 12/16/2013 13:44:52
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using SharpTL;

namespace MTProtoSchema
{
    // TL constructors.

    [TLObject(0x05162463)]
    public partial class resPQ : ResPQ
    {
        [TLProperty(1)]
        public BigMath.Int128 nonce { get; set; }

        [TLProperty(2)]
        public BigMath.Int128 server_nonce { get; set; }

        [TLProperty(3)]
        public System.Byte[] pq { get; set; }

        [TLProperty(4)]
        public System.Collections.Generic.List<ulong> server_public_key_fingerprints { get; set; }

    }

    [TLObject(0x83C95AEC)]
    public partial class p_q_inner_data : P_Q_inner_data
    {
        [TLProperty(1)]
        public System.Byte[] pq { get; set; }

        [TLProperty(2)]
        public System.Byte[] p { get; set; }

        [TLProperty(3)]
        public System.Byte[] q { get; set; }

        [TLProperty(4)]
        public BigMath.Int128 nonce { get; set; }

        [TLProperty(5)]
        public BigMath.Int128 server_nonce { get; set; }

        [TLProperty(6)]
        public BigMath.Int256 new_nonce { get; set; }

    }

    [TLObject(0x79CB045D)]
    public partial class server_DH_params_fail : Server_DH_Params
    {
        [TLProperty(1)]
        public BigMath.Int128 nonce { get; set; }

        [TLProperty(2)]
        public BigMath.Int128 server_nonce { get; set; }

        [TLProperty(3)]
        public BigMath.Int128 new_nonce_hash { get; set; }

    }

    [TLObject(0xD0E8075C)]
    public partial class server_DH_params_ok : Server_DH_Params
    {
        [TLProperty(1)]
        public BigMath.Int128 nonce { get; set; }

        [TLProperty(2)]
        public BigMath.Int128 server_nonce { get; set; }

        [TLProperty(3)]
        public System.Byte[] encrypted_answer { get; set; }

    }

    [TLObject(0xB5890DBA)]
    public partial class server_DH_inner_data : Server_DH_inner_data
    {
        [TLProperty(1)]
        public BigMath.Int128 nonce { get; set; }

        [TLProperty(2)]
        public BigMath.Int128 server_nonce { get; set; }

        [TLProperty(3)]
        public int g { get; set; }

        [TLProperty(4)]
        public System.Byte[] dh_prime { get; set; }

        [TLProperty(5)]
        public System.Byte[] g_a { get; set; }

        [TLProperty(6)]
        public int server_time { get; set; }

    }

    [TLObject(0x6643B654)]
    public partial class client_DH_inner_data : Client_DH_Inner_Data
    {
        [TLProperty(1)]
        public BigMath.Int128 nonce { get; set; }

        [TLProperty(2)]
        public BigMath.Int128 server_nonce { get; set; }

        [TLProperty(3)]
        public long retry_id { get; set; }

        [TLProperty(4)]
        public System.Byte[] g_b { get; set; }

    }

    [TLObject(0x3BCBF734)]
    public partial class dh_gen_ok : Set_client_DH_params_answer
    {
        [TLProperty(1)]
        public BigMath.Int128 nonce { get; set; }

        [TLProperty(2)]
        public BigMath.Int128 server_nonce { get; set; }

        [TLProperty(3)]
        public BigMath.Int128 new_nonce_hash1 { get; set; }

    }

    [TLObject(0x46DC1FB9)]
    public partial class dh_gen_retry : Set_client_DH_params_answer
    {
        [TLProperty(1)]
        public BigMath.Int128 nonce { get; set; }

        [TLProperty(2)]
        public BigMath.Int128 server_nonce { get; set; }

        [TLProperty(3)]
        public BigMath.Int128 new_nonce_hash2 { get; set; }

    }

    [TLObject(0xA69DAE02)]
    public partial class dh_gen_fail : Set_client_DH_params_answer
    {
        [TLProperty(1)]
        public BigMath.Int128 nonce { get; set; }

        [TLProperty(2)]
        public BigMath.Int128 server_nonce { get; set; }

        [TLProperty(3)]
        public BigMath.Int128 new_nonce_hash3 { get; set; }

    }

    [TLObject(0xF35C6D01)]
    public partial class rpc_result : RpcResult
    {
        [TLProperty(1)]
        public long req_msg_id { get; set; }

        [TLProperty(2)]
        public Object result { get; set; }

    }

    [TLObject(0x2144CA19)]
    public partial class rpc_error : RpcError
    {
        [TLProperty(1)]
        public int error_code { get; set; }

        [TLProperty(2)]
        public System.Byte[] error_message { get; set; }

    }

    [TLObject(0x5E2AD36E)]
    public partial class rpc_answer_unknown : RpcDropAnswer
    {
    }

    [TLObject(0xCD78E586)]
    public partial class rpc_answer_dropped_running : RpcDropAnswer
    {
    }

    [TLObject(0xA43AD8B7)]
    public partial class rpc_answer_dropped : RpcDropAnswer
    {
        [TLProperty(1)]
        public long msg_id { get; set; }

        [TLProperty(2)]
        public int seq_no { get; set; }

        [TLProperty(3)]
        public int bytes { get; set; }

    }

    [TLObject(0x0949D9DC)]
    public partial class future_salt : FutureSalt
    {
        [TLProperty(1)]
        public int valid_since { get; set; }

        [TLProperty(2)]
        public int valid_until { get; set; }

        [TLProperty(3)]
        public long salt { get; set; }

    }

    [TLObject(0xAE500895)]
    public partial class future_salts : FutureSalts
    {
        [TLProperty(1)]
        public long req_msg_id { get; set; }

        [TLProperty(2)]
        public int now { get; set; }

        [TLProperty(3)]
        public System.Collections.Generic.List<future_salt> salts { get; set; }

    }

    [TLObject(0x347773C5)]
    public partial class pong : Pong
    {
        [TLProperty(1)]
        public long msg_id { get; set; }

        [TLProperty(2)]
        public long ping_id { get; set; }

    }

    [TLObject(0xE22045FC)]
    public partial class destroy_session_ok : DestroySessionRes
    {
        [TLProperty(1)]
        public long session_id { get; set; }

    }

    [TLObject(0x62D350C9)]
    public partial class destroy_session_none : DestroySessionRes
    {
        [TLProperty(1)]
        public long session_id { get; set; }

    }

    [TLObject(0x9EC20908)]
    public partial class new_session_created : NewSession
    {
        [TLProperty(1)]
        public long first_msg_id { get; set; }

        [TLProperty(2)]
        public long unique_id { get; set; }

        [TLProperty(3)]
        public long server_salt { get; set; }

    }

    [TLObject(0x73F1F8DC)]
    public partial class msg_container : MessageContainer
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<message> messages { get; set; }

    }

    [TLObject(0x5BB8E511)]
    public partial class message : Message
    {
        [TLProperty(1)]
        public long msg_id { get; set; }

        [TLProperty(2)]
        public int seqno { get; set; }

        [TLProperty(3)]
        public int bytes { get; set; }

        [TLProperty(4)]
        public Object body { get; set; }

    }

    [TLObject(0xE06046B2)]
    public partial class msg_copy : MessageCopy
    {
        [TLProperty(1)]
        public Message orig_message { get; set; }

    }

    [TLObject(0x3072CFA1)]
    public partial class gzip_packed : Object
    {
        [TLProperty(1)]
        public System.Byte[] packed_data { get; set; }

    }

    [TLObject(0x62D6B459)]
    public partial class msgs_ack : MsgsAck
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<long> msg_ids { get; set; }

    }

    [TLObject(0xA7EFF811)]
    public partial class bad_msg_notification : BadMsgNotification
    {
        [TLProperty(1)]
        public long bad_msg_id { get; set; }

        [TLProperty(2)]
        public int bad_msg_seqno { get; set; }

        [TLProperty(3)]
        public int error_code { get; set; }

    }

    [TLObject(0xEDAB447B)]
    public partial class bad_server_salt : BadMsgNotification
    {
        [TLProperty(1)]
        public long bad_msg_id { get; set; }

        [TLProperty(2)]
        public int bad_msg_seqno { get; set; }

        [TLProperty(3)]
        public int error_code { get; set; }

        [TLProperty(4)]
        public long new_server_salt { get; set; }

    }

    [TLObject(0x7D861A08)]
    public partial class msg_resend_req : MsgResendReq
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<long> msg_ids { get; set; }

    }

    [TLObject(0xDA69FB52)]
    public partial class msgs_state_req : MsgsStateReq
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<long> msg_ids { get; set; }

    }

    [TLObject(0x04DEB57D)]
    public partial class msgs_state_info : MsgsStateInfo
    {
        [TLProperty(1)]
        public long req_msg_id { get; set; }

        [TLProperty(2)]
        public System.Byte[] info { get; set; }

    }

    [TLObject(0x8CC0D131)]
    public partial class msgs_all_info : MsgsAllInfo
    {
        [TLProperty(1)]
        public System.Collections.Generic.List<long> msg_ids { get; set; }

        [TLProperty(2)]
        public System.Byte[] info { get; set; }

    }

    [TLObject(0x276D3EC6)]
    public partial class msg_detailed_info : MsgDetailedInfo
    {
        [TLProperty(1)]
        public long msg_id { get; set; }

        [TLProperty(2)]
        public long answer_msg_id { get; set; }

        [TLProperty(3)]
        public int bytes { get; set; }

        [TLProperty(4)]
        public int status { get; set; }

    }

    [TLObject(0x809DB6DF)]
    public partial class msg_new_detailed_info : MsgDetailedInfo
    {
        [TLProperty(1)]
        public long answer_msg_id { get; set; }

        [TLProperty(2)]
        public int bytes { get; set; }

        [TLProperty(3)]
        public int status { get; set; }

    }

    [TLObject(0x60469778)]
    public partial class req_pq
    {
        [TLProperty(1)]
        public BigMath.Int128 nonce { get; set; }

    }

    [TLObject(0xD712E4BE)]
    public partial class req_DH_params
    {
        [TLProperty(1)]
        public BigMath.Int128 nonce { get; set; }

        [TLProperty(2)]
        public BigMath.Int128 server_nonce { get; set; }

        [TLProperty(3)]
        public System.Byte[] p { get; set; }

        [TLProperty(4)]
        public System.Byte[] q { get; set; }

        [TLProperty(5)]
        public long public_key_fingerprint { get; set; }

        [TLProperty(6)]
        public System.Byte[] encrypted_data { get; set; }

    }

    [TLObject(0xF5045F1F)]
    public partial class set_client_DH_params
    {
        [TLProperty(1)]
        public BigMath.Int128 nonce { get; set; }

        [TLProperty(2)]
        public BigMath.Int128 server_nonce { get; set; }

        [TLProperty(3)]
        public System.Byte[] encrypted_data { get; set; }

    }

    [TLObject(0x58E4A740)]
    public partial class rpc_drop_answer
    {
        [TLProperty(1)]
        public long req_msg_id { get; set; }

    }

    [TLObject(0xB921BD04)]
    public partial class get_future_salts
    {
        [TLProperty(1)]
        public int num { get; set; }

    }

    [TLObject(0x7ABE77EC)]
    public partial class ping
    {
        [TLProperty(1)]
        public long ping_id { get; set; }

    }

    [TLObject(0xF3427B8C)]
    public partial class ping_delay_disconnect
    {
        [TLProperty(1)]
        public long ping_id { get; set; }

        [TLProperty(2)]
        public int disconnect_delay { get; set; }

    }

    [TLObject(0xE7512126)]
    public partial class destroy_session
    {
        [TLProperty(1)]
        public long session_id { get; set; }

    }

    [TLObject(0x9299359F)]
    public partial class http_wait
    {
        [TLProperty(1)]
        public int max_delay { get; set; }

        [TLProperty(2)]
        public int wait_after { get; set; }

        [TLProperty(3)]
        public int max_wait { get; set; }

    }


    // TL types.

    [TLType(typeof(resPQ))]
    public interface ResPQ
    {
    }

    [TLType(typeof(p_q_inner_data))]
    public interface P_Q_inner_data
    {
    }

    [TLType(typeof(server_DH_params_fail), typeof(server_DH_params_ok))]
    public interface Server_DH_Params
    {
    }

    [TLType(typeof(server_DH_inner_data))]
    public interface Server_DH_inner_data
    {
    }

    [TLType(typeof(client_DH_inner_data))]
    public interface Client_DH_Inner_Data
    {
    }

    [TLType(typeof(dh_gen_ok), typeof(dh_gen_retry), typeof(dh_gen_fail))]
    public interface Set_client_DH_params_answer
    {
    }

    [TLType(typeof(rpc_result))]
    public interface RpcResult
    {
    }

    [TLType(typeof(rpc_error))]
    public interface RpcError
    {
    }

    [TLType(typeof(rpc_answer_unknown), typeof(rpc_answer_dropped_running), typeof(rpc_answer_dropped))]
    public interface RpcDropAnswer
    {
    }

    [TLType(typeof(future_salt))]
    public interface FutureSalt
    {
    }

    [TLType(typeof(future_salts))]
    public interface FutureSalts
    {
    }

    [TLType(typeof(pong))]
    public interface Pong
    {
    }

    [TLType(typeof(destroy_session_ok), typeof(destroy_session_none))]
    public interface DestroySessionRes
    {
    }

    [TLType(typeof(new_session_created))]
    public interface NewSession
    {
    }

    [TLType(typeof(msg_container))]
    public interface MessageContainer
    {
    }

    [TLType(typeof(message))]
    public interface Message
    {
    }

    [TLType(typeof(msg_copy))]
    public interface MessageCopy
    {
    }

    [TLType(typeof(gzip_packed))]
    public interface Object
    {
    }

    [TLType(typeof(msgs_ack))]
    public interface MsgsAck
    {
    }

    [TLType(typeof(bad_msg_notification), typeof(bad_server_salt))]
    public interface BadMsgNotification
    {
    }

    [TLType(typeof(msg_resend_req))]
    public interface MsgResendReq
    {
    }

    [TLType(typeof(msgs_state_req))]
    public interface MsgsStateReq
    {
    }

    [TLType(typeof(msgs_state_info))]
    public interface MsgsStateInfo
    {
    }

    [TLType(typeof(msgs_all_info))]
    public interface MsgsAllInfo
    {
    }

    [TLType(typeof(msg_detailed_info), typeof(msg_new_detailed_info))]
    public interface MsgDetailedInfo
    {
    }


    // TL methods.

    public interface ITLMethods
    {
        ResPQ req_pq(req_pq args);
        Server_DH_Params req_DH_params(req_DH_params args);
        Set_client_DH_params_answer set_client_DH_params(set_client_DH_params args);
        RpcDropAnswer rpc_drop_answer(rpc_drop_answer args);
        FutureSalts get_future_salts(get_future_salts args);
        Pong ping(ping args);
        Pong ping_delay_disconnect(ping_delay_disconnect args);
        DestroySessionRes destroy_session(destroy_session args);
        void http_wait(http_wait args);
    }
}
